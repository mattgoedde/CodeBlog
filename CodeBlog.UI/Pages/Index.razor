@page "/"

<Container Fluid>
    <Row>
        <Column>
            <Heading TextColor="TextColor.Primary" Size="HeadingSize.Is1">Hello, World!</Heading>
            <Text>This site serves as a contaminated dumping ground for my thoughts in code and side projects.</Text>
            <Divider />
        </Column>
    </Row>
    <Row>
        <Column>
            <Heading TextColor="TextColor.Primary" Size="HeadingSize.Is5">Search for Posts</Heading>
            <PostSearch />
            <Divider />
        </Column>
    </Row>
    <Row>
        <Column>
            <Heading TextColor="TextColor.Dark" Size="HeadingSize.Is5">Recent Posts</Heading>
            <ListGroup Flush>
            @foreach(var meta in _metas.Take(10))
            {
                <ListGroupItem Border="Border.Dark.OnBottom" Color="Color.Light">
                    <Div Flex="Flex.JustifyContent.Between" Width="Width.Is100">
                        <Anchor To="@($"post/{meta.Id}")">
                            <Heading TextColor="TextColor.Dark" Size="HeadingSize.Is6">@meta.Title</Heading>
                        </Anchor>
                        <Small TextColor="TextColor.Muted">@meta.CreatedAt</Small>
                    </Div>
                    <Small>@meta.Author</Small>
                </ListGroupItem>
            }
            </ListGroup>
        </Column>
    </Row>
</Container>

@code {
    [Inject]
    protected IRepository<MetadataEntity> _metaRepo { get; set; }

    private IEnumerable<MetadataValues> _metas { get; set; } = Enumerable.Empty<MetadataValues>();

    protected override async Task OnInitializedAsync()
    {
        _metas = (await _metaRepo.Read()).Where(m => m.Type == typeof(Post).Name).Select(m => m.Metadata);
    }
}